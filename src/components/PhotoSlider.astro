---
interface Props {
  photos: string[];
}

const { photos } = Astro.props as Props;
---

<style>
  .slider {
    position: relative;
    width: 100%;
    max-width: 800px;
    overflow: hidden;
    border-radius: 10px;
  }

  .slides {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }

  .slides img {
    width: 100%;
    flex-shrink: 0;
  }

  .controls {
    position: absolute;
    top: 50%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);
  }

  .controls button {
    background: rgba(0, 0, 0, 0.5);
    border: none;
    color: white;
    padding: 0.5rem 1rem;
    cursor: pointer;
    font-size: 1.2rem;
    border-radius: 20px;
  }
</style>

<div class="slider" id="slider">
  <div class="slides" id="slides">
    {photos.map(photo => (
      <img src={photo} alt="Slide" loading="lazy" />
    ))}
  </div>
  <div class="controls">
    <button id="prev">&#10094;</button>
    <button id="next">&#10095;</button>
  </div>
</div>

<script>
  const slider = document.getElementById('slider')!;
  const slides = document.getElementById('slides')!;
  const prevBtn = document.getElementById('prev')!;
  const nextBtn = document.getElementById('next')!;
  const totalSlides = slides.children.length;

  let index = 0;

  function updateSlide() {
    slides.style.transform = `translateX(${-index * 100}%)`;
  }

  prevBtn.addEventListener('click', () => {
    index = (index - 1 + totalSlides) % totalSlides;
    updateSlide();
  });

  nextBtn.addEventListener('click', () => {
    index = (index + 1) % totalSlides;
    updateSlide();
  });
</script>
